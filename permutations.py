

def perm_0(s):
    s[0][0], s[2][1] = s[2][1], s[0][0]
    s[0][1], s[3][0] = s[3][0], s[0][1]
    s[0][2], s[3][1] = s[3][1], s[0][2]
    s[0][3], s[1][0] = s[1][0], s[0][3]
    s[1][0], s[1][3] = s[1][3], s[1][0]
    s[1][1], s[2][2] = s[2][2], s[1][1]
    s[1][2], s[0][0] = s[0][0], s[1][2]
    s[1][3], s[1][2] = s[1][2], s[1][3]
    s[2][0], s[2][3] = s[2][3], s[2][0]
    s[2][1], s[1][1] = s[1][1], s[2][1]
    s[2][2], s[3][2] = s[3][2], s[2][2]
    s[2][3], s[0][2] = s[0][2], s[2][3]
    s[3][0], s[0][1] = s[0][1], s[3][0]
    s[3][1], s[3][3] = s[3][3], s[3][1]
    s[3][2], s[2][0] = s[2][0], s[3][2]
    s[3][3], s[0][3] = s[0][3], s[3][3]
    return s


def perm_1(s):
    s[0][0], s[1][3] = s[1][3], s[0][0]
    s[0][1], s[0][0] = s[0][0], s[0][1]
    s[0][2], s[2][3] = s[2][3], s[0][2]
    s[0][3], s[3][3] = s[3][3], s[0][3]
    s[1][0], s[0][2] = s[0][2], s[1][0]
    s[1][1], s[0][3] = s[0][3], s[1][1]
    s[1][2], s[1][0] = s[1][0], s[1][2]
    s[1][3], s[1][2] = s[1][2], s[1][3]
    s[2][0], s[3][1] = s[3][1], s[2][0]
    s[2][1], s[2][2] = s[2][2], s[2][1]
    s[2][2], s[2][1] = s[2][1], s[2][2]
    s[2][3], s[3][2] = s[3][2], s[2][3]
    s[3][0], s[3][0] = s[3][0], s[3][0]
    s[3][1], s[2][0] = s[2][0], s[3][1]
    s[3][2], s[1][1] = s[1][1], s[3][2]
    s[3][3], s[0][1] = s[0][1], s[3][3]
    return s


def perm_2(s):
    s[0][0], s[2][3] = s[2][3], s[0][0]
    s[0][1], s[0][3] = s[0][3], s[0][1]
    s[0][2], s[3][0] = s[3][0], s[0][2]
    s[0][3], s[3][1] = s[3][1], s[0][3]
    s[1][0], s[1][2] = s[1][2], s[1][0]
    s[1][1], s[3][2] = s[3][2], s[1][1]
    s[1][2], s[0][1] = s[0][1], s[1][2]
    s[1][3], s[3][3] = s[3][3], s[1][3]
    s[2][0], s[2][0] = s[2][0], s[2][0]
    s[2][1], s[2][2] = s[2][2], s[2][1]
    s[2][2], s[2][1] = s[2][1], s[2][2]
    s[2][3], s[1][0] = s[1][0], s[2][3]
    s[3][0], s[0][2] = s[0][2], s[3][0]
    s[3][1], s[1][1] = s[1][1], s[3][1]
    s[3][2], s[0][0] = s[0][0], s[3][2]
    s[3][3], s[1][3] = s[1][3], s[3][3]
    return s


def perm_3(s):
    s[0][0], s[1][1] = s[1][1], s[0][0]
    s[0][1], s[1][3] = s[1][3], s[0][1]
    s[0][2], s[2][3] = s[2][3], s[0][2]
    s[0][3], s[0][1] = s[0][1], s[0][3]
    s[1][0], s[3][2] = s[3][2], s[1][0]
    s[1][1], s[2][2] = s[2][2], s[1][1]
    s[1][2], s[1][0] = s[1][0], s[1][2]
    s[1][3], s[2][1] = s[2][1], s[1][3]
    s[2][0], s[0][2] = s[0][2], s[2][0]
    s[2][1], s[0][3] = s[0][3], s[2][1]
    s[2][2], s[2][0] = s[2][0], s[2][2]
    s[2][3], s[0][0] = s[0][0], s[2][3]
    s[3][0], s[1][2] = s[1][2], s[3][0]
    s[3][1], s[3][0] = s[3][0], s[3][1]
    s[3][2], s[3][3] = s[3][3], s[3][2]
    s[3][3], s[3][1] = s[3][1], s[3][3]
    return s


def perm_4(s):
    s[0][0], s[2][3] = s[2][3], s[0][0]
    s[0][1], s[1][3] = s[1][3], s[0][1]
    s[0][2], s[2][1] = s[2][1], s[0][2]
    s[0][3], s[2][0] = s[2][0], s[0][3]
    s[1][0], s[0][2] = s[0][2], s[1][0]
    s[1][1], s[0][3] = s[0][3], s[1][1]
    s[1][2], s[3][3] = s[3][3], s[1][2]
    s[1][3], s[0][0] = s[0][0], s[1][3]
    s[2][0], s[3][2] = s[3][2], s[2][0]
    s[2][1], s[2][2] = s[2][2], s[2][1]
    s[2][2], s[1][1] = s[1][1], s[2][2]
    s[2][3], s[1][2] = s[1][2], s[2][3]
    s[3][0], s[3][1] = s[3][1], s[3][0]
    s[3][1], s[0][1] = s[0][1], s[3][1]
    s[3][2], s[1][0] = s[1][0], s[3][2]
    s[3][3], s[3][0] = s[3][0], s[3][3]
    return s


def perm_5(s):
    s[0][0], s[2][3] = s[2][3], s[0][0]
    s[0][1], s[0][0] = s[0][0], s[0][1]
    s[0][2], s[3][3] = s[3][3], s[0][2]
    s[0][3], s[1][3] = s[1][3], s[0][3]
    s[1][0], s[3][0] = s[3][0], s[1][0]
    s[1][1], s[1][2] = s[1][2], s[1][1]
    s[1][2], s[1][0] = s[1][0], s[1][2]
    s[1][3], s[0][3] = s[0][3], s[1][3]
    s[2][0], s[2][2] = s[2][2], s[2][0]
    s[2][1], s[2][1] = s[2][1], s[2][1]
    s[2][2], s[2][0] = s[2][0], s[2][2]
    s[2][3], s[0][2] = s[0][2], s[2][3]
    s[3][0], s[3][2] = s[3][2], s[3][0]
    s[3][1], s[3][1] = s[3][1], s[3][1]
    s[3][2], s[0][1] = s[0][1], s[3][2]
    s[3][3], s[1][1] = s[1][1], s[3][3]
    return s


def perm_6(s):
    s[0][0], s[3][0] = s[3][0], s[0][0]
    s[0][1], s[2][0] = s[2][0], s[0][1]
    s[0][2], s[2][2] = s[2][2], s[0][2]
    s[0][3], s[0][1] = s[0][1], s[0][3]
    s[1][0], s[1][0] = s[1][0], s[1][0]
    s[1][1], s[2][1] = s[2][1], s[1][1]
    s[1][2], s[3][1] = s[3][1], s[1][2]
    s[1][3], s[0][3] = s[0][3], s[1][3]
    s[2][0], s[0][2] = s[0][2], s[2][0]
    s[2][1], s[1][1] = s[1][1], s[2][1]
    s[2][2], s[0][0] = s[0][0], s[2][2]
    s[2][3], s[1][2] = s[1][2], s[2][3]
    s[3][0], s[3][3] = s[3][3], s[3][0]
    s[3][1], s[2][3] = s[2][3], s[3][1]
    s[3][2], s[1][3] = s[1][3], s[3][2]
    s[3][3], s[3][2] = s[3][2], s[3][3]
    return s


def perm_7(s):
    s[0][0], s[1][1] = s[1][1], s[0][0]
    s[0][1], s[1][2] = s[1][2], s[0][1]
    s[0][2], s[3][3] = s[3][3], s[0][2]
    s[0][3], s[0][1] = s[0][1], s[0][3]
    s[1][0], s[1][3] = s[1][3], s[1][0]
    s[1][1], s[3][2] = s[3][2], s[1][1]
    s[1][2], s[2][1] = s[2][1], s[1][2]
    s[1][3], s[3][1] = s[3][1], s[1][3]
    s[2][0], s[1][0] = s[1][0], s[2][0]
    s[2][1], s[2][3] = s[2][3], s[2][1]
    s[2][2], s[2][0] = s[2][0], s[2][2]
    s[2][3], s[0][0] = s[0][0], s[2][3]
    s[3][0], s[2][2] = s[2][2], s[3][0]
    s[3][1], s[3][0] = s[3][0], s[3][1]
    s[3][2], s[0][3] = s[0][3], s[3][2]
    s[3][3], s[0][2] = s[0][2], s[3][3]
    return s


def perm_8(s):
    s[0][0], s[3][3] = s[3][3], s[0][0]
    s[0][1], s[0][1] = s[0][1], s[0][1]
    s[0][2], s[2][3] = s[2][3], s[0][2]
    s[0][3], s[1][3] = s[1][3], s[0][3]
    s[1][0], s[0][0] = s[0][0], s[1][0]
    s[1][1], s[3][0] = s[3][0], s[1][1]
    s[1][2], s[0][2] = s[0][2], s[1][2]
    s[1][3], s[3][2] = s[3][2], s[1][3]
    s[2][0], s[0][3] = s[0][3], s[2][0]
    s[2][1], s[2][2] = s[2][2], s[2][1]
    s[2][2], s[1][0] = s[1][0], s[2][2]
    s[2][3], s[2][1] = s[2][1], s[2][3]
    s[3][0], s[2][0] = s[2][0], s[3][0]
    s[3][1], s[3][1] = s[3][1], s[3][1]
    s[3][2], s[1][1] = s[1][1], s[3][2]
    s[3][3], s[1][2] = s[1][2], s[3][3]
    return s


def perm_9(s):
    s[0][0], s[2][1] = s[2][1], s[0][0]
    s[0][1], s[0][0] = s[0][0], s[0][1]
    s[0][2], s[1][0] = s[1][0], s[0][2]
    s[0][3], s[0][3] = s[0][3], s[0][3]
    s[1][0], s[2][3] = s[2][3], s[1][0]
    s[1][1], s[2][0] = s[2][0], s[1][1]
    s[1][2], s[3][3] = s[3][3], s[1][2]
    s[1][3], s[1][2] = s[1][2], s[1][3]
    s[2][0], s[1][3] = s[1][3], s[2][0]
    s[2][1], s[1][1] = s[1][1], s[2][1]
    s[2][2], s[3][0] = s[3][0], s[2][2]
    s[2][3], s[0][2] = s[0][2], s[2][3]
    s[3][0], s[2][2] = s[2][2], s[3][0]
    s[3][1], s[0][1] = s[0][1], s[3][1]
    s[3][2], s[3][2] = s[3][2], s[3][2]
    s[3][3], s[3][1] = s[3][1], s[3][3]
    return s


def perm_10(s):
    s[0][0], s[1][0] = s[1][0], s[0][0]
    s[0][1], s[0][3] = s[0][3], s[0][1]
    s[0][2], s[1][2] = s[1][2], s[0][2]
    s[0][3], s[2][3] = s[2][3], s[0][3]
    s[1][0], s[3][3] = s[3][3], s[1][0]
    s[1][1], s[0][0] = s[0][0], s[1][1]
    s[1][2], s[1][3] = s[1][3], s[1][2]
    s[1][3], s[3][0] = s[3][0], s[1][3]
    s[2][0], s[3][1] = s[3][1], s[2][0]
    s[2][1], s[3][2] = s[3][2], s[2][1]
    s[2][2], s[1][1] = s[1][1], s[2][2]
    s[2][3], s[2][1] = s[2][1], s[2][3]
    s[3][0], s[2][0] = s[2][0], s[3][0]
    s[3][1], s[2][2] = s[2][2], s[3][1]
    s[3][2], s[0][2] = s[0][2], s[3][2]
    s[3][3], s[0][1] = s[0][1], s[3][3]
    return s


def perm_11(s):
    s[0][0], s[1][2] = s[1][2], s[0][0]
    s[0][1], s[1][1] = s[1][1], s[0][1]
    s[0][2], s[0][0] = s[0][0], s[0][2]
    s[0][3], s[1][0] = s[1][0], s[0][3]
    s[1][0], s[3][3] = s[3][3], s[1][0]
    s[1][1], s[2][2] = s[2][2], s[1][1]
    s[1][2], s[2][3] = s[2][3], s[1][2]
    s[1][3], s[1][3] = s[1][3], s[1][3]
    s[2][0], s[0][1] = s[0][1], s[2][0]
    s[2][1], s[3][0] = s[3][0], s[2][1]
    s[2][2], s[2][1] = s[2][1], s[2][2]
    s[2][3], s[0][2] = s[0][2], s[2][3]
    s[3][0], s[0][3] = s[0][3], s[3][0]
    s[3][1], s[3][2] = s[3][2], s[3][1]
    s[3][2], s[2][0] = s[2][0], s[3][2]
    s[3][3], s[3][1] = s[3][1], s[3][3]
    return s


permutation = [perm_0, perm_1, perm_2, perm_3,
               perm_4, perm_5, perm_6, perm_7,
               perm_8, perm_9, perm_10, perm_11]


def byte_permutation(b):
    b = list(bin(b)[2:].zfill(8))
    b[0] = str(int(b[4]) ^ int(b[7]))
    b[1] = str(int(b[5]) ^ int(b[6]))
    b[2] = str(int(b[6]) ^ int(b[4]))
    b[3] = str(int(b[7]) ^ int(b[5]))
    return int(''.join(b),2)
